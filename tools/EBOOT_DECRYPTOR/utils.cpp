#include "utils.h"
#include <stdio.h>
#include <stdlib.h>


void deleteFile(const char *filename)
{
  FILE *file = fopen(filename, "rb");
  if (file)
  {
    fclose(file);
    remove(filename);
  }
}

void writeToFile(void *buffer, int size, const char *filename)
{
  FILE *file = fopen(filename, "wb");
  if (file)
  {
    fwrite(buffer, size, 1, file);
    fclose(file);
  }
  appendBufferAsHexAsciiToFile(buffer, size, filename);
}

void readFromFile(const char *filename, void *buffer, int size)
{
  FILE *file = fopen(filename, "rb");
  if (file)
  {
    fread(buffer, size, 1, file);
    fclose(file);
  }
}

void *readFromFile(const char *filename, int *size)
{
  FILE *file = fopen(filename, "rb");
  if (file)
  {
    fseek(file, 0, SEEK_END);
    *size = ftell(file);
    fseek(file, 0, SEEK_SET);
    void *buffer = malloc(*size);
    fread(buffer, *size, 1, file);
    fclose(file);
    return buffer;
  }
  return NULL;
}

void appendBufferAsHexAsciiToFile(void *buffer, int size, const char *filename)
{
  FILE *file = fopen("/home/leon/Dokumente/debug/bin.txt", "ab");
  if (file)
  {
    fprintf(file, "%s\n", filename);
    for (int i = 0; i < size; i++)
    {
      if (i % 16 == 0)
      {
        fprintf(file, "\n%08X: ", i);
      }
      fprintf(file, "%02X ", ((unsigned char *)buffer)[i]);
      // add ascii
      if (i % 16 == 15)
      {
        fprintf(file, " | ");
        for (int j = i - 15; j <= i; j++)
        {
          if (((unsigned char *)buffer)[j] >= 0x20 && ((unsigned char *)buffer)[j] <= 0x7E)
          {
            fprintf(file, "%c", ((unsigned char *)buffer)[j]);
          }
          else
          {
            fprintf(file, ".");
          }
        }
      }
    }
    fprintf(file, "\n\n");
    fclose(file);
  }
}

unsigned short swapEndianess16(unsigned short value) {
    return (value >> 8) | (value << 8);
}
