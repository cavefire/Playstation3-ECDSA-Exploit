#include "types.h"
#include "keys.h"
#include "ecdsa.h"
#include "util.h"
#include "sce.h"

#define PRINT_ARRAY(array, size) \
  for (int i = 0; i < size; i++) \
    printf(" %02X", array[i]);   

ECDSA_Curve* ECDSA_Params;

int ecdsa_get_params(u32 type, u8 *p, u8 *a, u8 *b, u8 *N, u8 *Gx, u8 *Gy)
{
	curve_t *c;

	if(type & USE_VSH_CURVE)
	{
		//VSH curve.
		if((c = vsh_curve_find(type & ~USE_VSH_CURVE)) == NULL)
			return -1;
	}
	else
	{
		//Loader curve.
		if((c = curve_find(type)) == NULL)
			return -1;
	}

	/*printf("----------------------KURVENPARAMETER NOT INV-----------------------\n");
	printf("p:  "); PRINT_ARRAY(c->p, 20); printf("\n");
	printf("a:  "); PRINT_ARRAY(c->a, 20); printf("\n");
	printf("b:  "); PRINT_ARRAY(c->b, 20); printf("\n");
	printf("N:  "); PRINT_ARRAY(c->N, 21); printf("\n");
	printf("Gx: "); PRINT_ARRAY(c->Gx, 20); printf("\n");
	printf("Gy: "); PRINT_ARRAY(c->Gy, 20); printf("\n");
	printf("------------------------------------------------------------\n\n");*/

	ECDSA_Params = (ECDSA_Curve*)malloc(sizeof(ECDSA_Curve));

	_memcpy_inv(p, c->p, 20);
	_memcpy_inv(a, c->a, 20);
	_memcpy_inv(b, c->b, 20);
	_memcpy_inv(N, c->N, 21);
	_memcpy_inv(Gx, c->Gx, 20);
	_memcpy_inv(Gy, c->Gy, 20);

	_memcpy_inv(ECDSA_Params->p, c->p, 20);
	_memcpy_inv(ECDSA_Params->a, c->a, 20);
	_memcpy_inv(ECDSA_Params->b, c->b, 20);
	_memcpy_inv(ECDSA_Params->N, c->N, 21);
	_memcpy_inv(ECDSA_Params->Gx, c->Gx, 20);
	_memcpy_inv(ECDSA_Params->Gy, c->Gy, 20);

	/*printf("----------------------KURVENPARAMETER-----------------------\n");
	printf("p:  "); PRINT_ARRAY(p, 20); printf("\n");
	printf("a:  "); PRINT_ARRAY(a, 20); printf("\n");
	printf("b:  "); PRINT_ARRAY(b, 20); printf("\n");
	printf("N:  "); PRINT_ARRAY(N, 21); printf("\n");
	printf("Gx: "); PRINT_ARRAY(Gx, 20); printf("\n");
	printf("Gy: "); PRINT_ARRAY(Gy, 20); printf("\n");
	printf("------------------------------------------------------------\n\n");*/
	
	return 0;
}
